---
globs: token4good-backend/Dockerfile,railway.json,vercel.json,scripts/deploy-*.sh
description: Standards de dÃ©ploiement production Token4Good
---

# Deployment Standards - Production

## Target Date : 28 octobre 2025 ðŸš€

## Architecture Production - Hostinger VPS

```
Serveur Hostinger VPS (147.79.101.32)
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
t4g.dazno.de
  â†“
Nginx (80/443) â†’ Backend Rust (3001) â†’ PostgreSQL (5432)
                      â†“
                 LND + Bitcoin Core
Frontend (Static)
```

## Serveur
- **Provider**: Hostinger VPS
- **IP**: 147.79.101.32
- **AccÃ¨s SSH**: root@147.79.101.32
- **Domaine**: t4g.dazno.de

## DÃ©ploiement Hostinger (Production)

### Script Automatique
```bash
# DÃ©ploiement complet
./scripts/deploy-hostinger.sh full

# Backend uniquement
./scripts/deploy-hostinger.sh backend

# Frontend uniquement
./scripts/deploy-hostinger.sh frontend

# Status
./scripts/deploy-hostinger.sh status
```

### Configuration Backend
Fichier : `/var/www/token4good/token4good-backend/.env`

```bash
PORT=3001
DATABASE_URL=postgresql://t4g_user:***@localhost:5432/token4good
JWT_SECRET=***
LND_HOST=localhost
LND_PORT=10009
RUST_LOG=info
```

### Services Systemd
- **Backend**: `token4good-backend.service` (port 3001)
- **PostgreSQL**: `postgresql.service` (port 5432)
- **Nginx**: `nginx.service` (ports 80/443)
- **Bitcoin**: `bitcoind.service` (port 8332)
- **LND**: `lnd.service` (port 10009)

### Commandes Utiles
```bash
# Logs backend
journalctl -u token4good-backend -f

# RedÃ©marrer backend
systemctl restart token4good-backend

# Recharger Nginx
systemctl reload nginx

# Status tous les services
systemctl status token4good-backend postgresql nginx
```

## Documentation ComplÃ¨te
- [HOSTINGER_DEPLOYMENT.md](mdc:HOSTINGER_DEPLOYMENT.md) - Guide complet
- [QUICKSTART_HOSTINGER.md](mdc:QUICKSTART_HOSTINGER.md) - DÃ©marrage rapide

---

## DÃ©ploiement Alternatif: Railway + Vercel

### Backend (Railway)

#### Configuration
Fichier : [railway.json](mdc:token4good-backend/railway.json)

#### Script DÃ©ploiement
```bash
cd token4good-backend
railway init
railway add -d postgres
./railway-deploy.sh
```

### Frontend (Vercel)

#### Configuration
Fichier : [vercel.json](mdc:vercel.json)

#### Script DÃ©ploiement
```bash
./deploy-vercel-v2.sh --prod
```

## Monitoring

### Health Checks
```bash
# Backend
curl https://api.token4good.com/health

# Frontend
curl https://t4g.dazno.de/api/health
```

### Logs
```bash
# Backend
railway logs --follow

# Frontend
vercel logs --follow
```

### MÃ©triques Ã  Surveiller
- API latency (p50, p95, p99)
- Error rate par endpoint
- Database connection pool
- Lightning payment success rate
- RGB contract creation rate

## Rollback Procedure
```bash
# Backend
railway rollback

# Frontend
vercel rollback
```

## Secrets Rotation

### Schedule
| Secret | FrÃ©quence | Prochain |
|--------|-----------|----------|
| JWT_SECRET | 90 jours | 30 dÃ©c 2025 |
| DATABASE_URL | 90 jours | 30 dÃ©c 2025 |
| LND_MACAROON | 180 jours | 30 mars 2026 |
| DAZNO_API_KEY | 180 jours | 30 mars 2026 |

### Guide
Documentation : [SECRETS_ROTATION_GUIDE.md](mdc:SECRETS_ROTATION_GUIDE.md)

## Pre-Deployment Checklist

### Backend
- [ ] Tests passent Ã  100%
- [ ] Build Docker rÃ©ussit
- [ ] Variables d'environnement configurÃ©es
- [ ] LND accessible
- [ ] PostgreSQL migrations OK

### Frontend
- [ ] Build Next.js rÃ©ussit
- [ ] Routes API supprimÃ©es
- [ ] Variables d'environnement configurÃ©es
- [ ] DNS configurÃ©
- [ ] SSL actif

### Production
- [ ] Backup database complet
- [ ] Monitoring actif
- [ ] Alerting configurÃ©
- [ ] Rollback plan testÃ©
- [ ] Support team notifiÃ©

## Documentation
- Guide complet : [DEPLOYMENT_GUIDE.md](mdc:DEPLOYMENT_GUIDE.md)
- Production : [PRODUCTION_DEPLOYMENT.md](mdc:PRODUCTION_DEPLOYMENT.md)
- Quick Start : [QUICKSTART.md](mdc:QUICKSTART.md)
